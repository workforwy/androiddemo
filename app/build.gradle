apply plugin: 'com.android.application'

def qmui_arch_version = '2.1.0'

android {

    compileSdkVersion 33

    defaultConfig {
        applicationId "com.ceshi.ha"
        minSdkVersion 21
        targetSdkVersion 33
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        signingConfig signingConfigs.debug

        manifestPlaceholders = [
                JPUSH_PKGNAME: applicationId,
                JPUSH_APPKEY : "7b1ceb56dab2082d2bd1dbdb", //JPush 上注册的包名对应的 Appkey.
                JPUSH_CHANNEL: "developer-default", //暂时填写默认值即可.
        ]
    }

    buildFeatures {
        dataBinding = true
        viewBinding = true
    }

    //配置签名信息
    signingConfigs {
        debug {
            storeFile file('debug.jks')
            storePassword 'debug123'
            keyAlias 'debug'
            keyPassword 'debug123'
        }
        release {
            storeFile file('debug.jks')
            storePassword 'debug123'
            keyAlias 'debug'
            keyPassword 'debug123'
        }
    }
    //配置构建类型，可打出不同类型的包，默认有debug和release两种
    buildTypes {
        debug {
            signingConfig signingConfigs.debug
        }
        staging {
            signingConfig signingConfigs.debug
        }
        release {
            minifyEnabled false
            signingConfig signingConfigs.debug
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        encoding "UTF-8"
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    //配置相关源文件的位置
    //sourceSets {
    //
    //}

    // 配置不同风格的APP，在buildTypes的基础上还可以让每一个类型的APP拥有不同的风格，所以最终打出的APK的数量就是buildTypes乘以productFlavors
    productFlavors {

//        online{
//
//        }

    }
    namespace 'com.ceshi.ha'
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    //noinspection GradleCompatible
    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation 'com.google.android.material:material:1.5.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.3'

    // 单元测试
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'

    //网络
    implementation 'org.xutils:xutils:3.9.0'
    implementation 'com.squareup.okhttp3:okhttp:5.0.0-alpha.11'
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'

    //动画
    implementation 'com.github.Jerey-Jobs:AnimationHelper:1.0'

    // 图片加载
    implementation 'com.squareup.picasso:picasso:2.71828'
    implementation 'eu.the4thfloor.volley:com.android.volley:2015.05.28'

    // 沉浸式状态栏和标题栏
    implementation 'com.gyf.barlibrary:barlibrary:2.3.0'

    // 事件传递
    implementation 'org.greenrobot:eventbus:3.3.1'

    // 工具类
    implementation 'com.blankj:utilcodex:1.31.1'

    // rxJava
    implementation 'io.reactivex.rxjava2:rxjava:2.2.21'
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.1'

    // Qmui
    implementation 'com.qmuiteam:qmui:2.1.0'
    implementation "com.qmuiteam:arch:$qmui_arch_version"
    annotationProcessor "com.qmuiteam:arch-compiler:$qmui_arch_version" // use annotationProcessor if java

    // jpush
    implementation 'cn.jiguang.sdk:jpush:5.0.3'  // 此处以JPush 3.6.6 版本为例。
    implementation 'cn.jiguang.sdk:jcore:4.2.3'  // 此处以JCore 2.3.8 版本为例。

    implementation 'com.lxj:xpopup:2.1.4'

    implementation 'com.hacknife.briefness:briefness:2.0.5'
    annotationProcessor 'com.hacknife.briefness:briefness-compiler:2.0.5'

    implementation "io.github.freddychen:shine-java:0.0.8"
}

